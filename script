#!/bin/bash
# SkyExo Panel Auto-Installer
# Supported OS: Ubuntu 20.04/22.04, Debian 11
# Make sure to run this script with sudo privileges.

set -e

echo "============================================="
echo "       SkyExo Panel Installation Started     "
echo "============================================="

# 1. System Update & Upgrade
echo "[1/8] Updating system packages..."
apt update && apt upgrade -y

# 2. Install Dependencies (PHP, Nginx, MySQL, Git, Composer, etc.)
echo "[2/8] Installing required packages..."
apt install -y curl git nginx mysql-server php php-cli php-mbstring php-xml php-bcmath php-curl php-zip unzip

# Install Composer if not installed
if ! command -v composer &>/dev/null; then
    echo "[2.1] Installing Composer..."
    curl -sSL https://getcomposer.org/installer -o composer-setup.php
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    rm composer-setup.php
fi

# 3. Setup MySQL Database
DB_NAME="skyexo"
DB_USER="skyexo"
DB_PASSWORD="StrongPassword"  # Change this password as needed

echo "[3/8] Setting up MySQL database..."
mysql -e "CREATE DATABASE IF NOT EXISTS \`${DB_NAME}\`;"
mysql -e "CREATE USER IF NOT EXISTS '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASSWORD}';"
mysql -e "GRANT ALL PRIVILEGES ON \`${DB_NAME}\`.* TO '${DB_USER}'@'localhost';"
mysql -e "FLUSH PRIVILEGES;"

# 4. Install Docker (if your panel requires container management)
echo "[4/8] Installing Docker..."
if ! command -v docker &>/dev/null; then
    curl -fsSL https://get.docker.com | sh
    systemctl enable --now docker
fi

# 5. Download SkyExo Panel Code from GitHub
# Replace the below URL with your repository's actual URL.
GIT_REPO="https://github.com/your-username/SkyExo-Panel.git"
INSTALL_DIR="/var/www/skyexo"

echo "[5/8] Cloning SkyExo Panel repository..."
if [ -d "$INSTALL_DIR" ]; then
    echo "Directory ${INSTALL_DIR} exists. Pulling latest changes..."
    cd "$INSTALL_DIR" && git pull
else
    git clone "${GIT_REPO}" "${INSTALL_DIR}"
    cd "${INSTALL_DIR}"
fi

# 6. Install PHP Dependencies via Composer
echo "[6/8] Installing PHP dependencies with Composer..."
composer install --no-dev --optimize-autoloader

# 7. Environment Configuration
echo "[7/8] Configuring environment file..."
if [ ! -f ".env" ]; then
    cp .env.example .env
fi
sed -i "s/DB_DATABASE=.*/DB_DATABASE=${DB_NAME}/" .env
sed -i "s/DB_USERNAME=.*/DB_USERNAME=${DB_USER}/" .env
sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${DB_PASSWORD}/" .env

# Generate application key if using Laravel
if grep -q "APP_KEY=" .env; then
    php artisan key:generate
fi

# Run database migrations
php artisan migrate --force

# 8. Configure Nginx
# Update 'server_name' to your actual domain or server IP.
NGINX_CONF="/etc/nginx/sites-available/skyexo"
echo "[8/8] Configuring Nginx..."

cat > "${NGINX_CONF}" <<EOF
server {
    listen 80;
    server_name yourdomain.com;  # Replace with your domain or IP

    root ${INSTALL_DIR}/public;
    index index.php index.html;

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.1-fpm.sock;  # Adjust PHP version if needed
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOF

# Enable the new Nginx site and restart Nginx
ln -sf "${NGINX_CONF}" /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl restart nginx

echo "============================================="
echo "  SkyExo Panel Installation Completed!"
echo "  Access your panel at: http://yourdomain.com"
echo "============================================="
